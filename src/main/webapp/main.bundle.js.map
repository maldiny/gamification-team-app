{"version":3,"sources":["/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/$_lazy_route_resource lazy","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/app.component.css","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/app.component.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/app.component.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/app.module.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/app.routing.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/images/background.jpg","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/model/alertas.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/model/roles.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/model/tasks.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/model/tasktypes.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/model/usuarios.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/sections/footer/footer.component.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/sections/footer/footer.component.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/sections/header/header.component.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/sections/header/header.component.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/alertas.service.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/auditoria.service.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/auth.service.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/location.service.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/roles.service.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/tasks.service.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/tasktypes.service.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/usuarios.service.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/utils/auth-checker.component.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/alertas/alertas-table.css","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/alertas/alertas-table.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/alertas/alertas-table.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/alertas/alertas.component.css","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/alertas/alertas.component.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/alertas/alertas.component.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/login/login.component.css","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/login/login.component.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/login/login.component.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/logout/logout.component.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/profile/profile-table.css","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/profile/profile-table.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/profile/profile-table.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/profile/profile.component.css","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/profile/profile.component.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/profile/profile.component.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/ranking/ranking-table.css","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/ranking/ranking-table.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/ranking/ranking-table.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/ranking/ranking.component.css","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/ranking/ranking.component.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/ranking/ranking.component.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/roles/roles-table.css","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/roles/roles-table.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/roles/roles-table.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/roles/roles.component.css","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/roles/roles.component.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/roles/roles.component.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/tasks/tasks-table.css","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/tasks/tasks-table.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/tasks/tasks-table.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/tasks/tasks.component.css","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/tasks/tasks.component.html","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/tasks/tasks.component.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/environments/environment.ts","/Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".chat-container{\\n  height: 80vh;\\n  width: 100vw;\\n}\\n.chat{\\n  text-align: left;\\n  margin: 0 auto;\\n  width: 50%;\\n  height: 100%;\\n  border: 1px solid grey;\\n}\\n\\n.footer{\\n  background: #cccccc;\\n  margin: 0 auto;\\n  position: absolute;\\n  bottom: 0;\\n  height: 10vh;\\n  width: 100vw;\\n}\\n.send-button{\\n  margin: 0 auto;\\n  height: 70%;\\n  width: 50%;\\n}\\ninput{\\n  float: right;\\n  height: 30px;\\n  border-radius: 15px;\\n  font-size: 1.5em;\\n}\\n.send{\\n  float: right;\\n  background: url(\" + require(\"./images/background.jpg\") + \");\\n  background-size: contain;\\n  background-repeat: no-repeat;\\n  height: 30px;\\n  width: 30px;\\n  margin-left: 5px;\\n\\n}\\n.example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px;\\n}\\n\\n.container{\\n    background-image: url(\" + require(\"./images/background.jpg\") + \");\\n    background-position: center center;\\n    background-size: 100%;\\n    background-repeat: no-repeat;\\n}\\n\\nbody{\\n  background: url(\" + require(\"./images/background.jpg\") + \") no-repeat fixed 100%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!-- <div id=\\\"bg\\\" style=\\\"width: 100%;height: 100%;overflow: hidden; margin: 0;padding: 0; border: 0px solid #eee;\\\">\\n\\t<div style=\\\" position: absolute;    width: 100%;    height: 100%;    margin: 0;padding: 0;border: 0px solid #eee;\\\">\\n\\t\\t<table cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" style=\\\"width: 100%;height: 100%;overflow: hidden; margin: 0;padding: 0; border: 0px solid #eee;border-collapse: collapse;border-spacing: 0;    list-style: none;\\\">\\n\\t\\t\\t<tbody>\\n\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t<img alt=\\\"\\\" src=\\\"background.100c6c7cc7db1f92c0bd.jpg\\\" style=\\\"min-height: 50%;min-width: 50%;    margin: 0 auto;display: block;border: 0px solid #eee;    list-style: none;    text-align: center;\\\">\\n\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t</tr>\\n\\t\\t\\t</tbody>\\n\\t\\t</table>\\n\\t</div>\\n</div>\\n-->\\n<cuppa-slidemenu *ngIf=\\\"logged==true\\\" [menulist]=\\\"menuItemsArray\\\" [config]=\\\"config\\\" (open)=\\\"onMenuOpen()\\\" (close)=\\\"onMenuClose()\\\" (onItemSelect)=\\\"onItemSelect($event)\\\"></cuppa-slidemenu>\\n\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport Stomp from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport $ from 'jquery';\nimport {MatTableDataSource} from '@angular/material';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { Router } from '@angular/router';\nimport { AuthService } from './services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  public logged: Boolean;\n\n  private menuItemsArray: any[] = [ \n         {\"title\":\"Ranking\",\"link\":\"\"},\n         {\"title\":\"Tasks\",\"link\":\"tasks\"},\n         {\"title\":\"Roles\",\"link\":\"roles\"},\n         {\"title\":\"Profile\",\"link\":\"profile\"},\n         {\"title\":\"Alerts\",\"link\":\"alerts\"},\n         {\"title\":\"Logout\",\"link\":\"logout\"}\n   ];\n\n   private config = {\n      \"animation\": \"collapse\",\n      \"offset\": {\n          \"top\": 55\n      },\n      closeOnCLick: true\n  };\n\n  constructor(private router: Router, private authService: AuthService){\n    //this.logged = authService.isCurrentUserFromLocalStorage();\n    this.logged = true;\n    console.log(\"OAuth: \" + this.logged);\n  }\n\n  public onMenuClose(){\n  }\n  public onMenuOpen(){\n  }\n  private onItemSelect(item:any){\n    this.router.navigate([item.link]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SlideMenuModule } from 'cuppa-ng2-slidemenu/cuppa-ng2-slidemenu';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app.routing';\n\nimport { AlertasService } from './services/alertas.service';\nimport { AuditoriasService } from './services/auditoria.service';\nimport { RolesService } from './services/roles.service';\nimport { TasksService } from './services/tasks.service';\nimport { TasktypesService } from './services/tasktypes.service';\nimport { UsuariosService } from './services/usuarios.service';\nimport { AuthService } from './services/auth.service';\nimport { LocationService } from './services/location.service';\n\n\n\nimport { Pagination } from './model/pagination';\n\nimport { RankingTable } from './views/ranking/ranking-table';\nimport { RolesTable } from './views/roles/roles-table';\nimport { TasksTable } from './views/tasks/tasks-table';\nimport { AlertasTable } from './views/alertas/alertas-table';\nimport { ProfileTable } from './views/profile/profile-table';\n\nimport { RankingComponent } from './views/ranking/ranking.component';\nimport { RolesComponent } from './views/roles/roles.component';\nimport { TasksComponent } from './views/tasks/tasks.component';\nimport { AlertasComponent } from './views/alertas/alertas.component';\nimport { ProfileComponent } from './views/profile/profile.component';\n\nimport { HeaderComponent } from './sections/header/header.component';\nimport { FooterComponent } from './sections/footer/footer.component';\n\nimport { AuthChecker } from './utils/auth-checker.component';\nimport { LoginComponent } from './views/login/login.component';\nimport { LogoutComponent } from './views/logout/logout.component';\n\n\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ]\n})\nexport class DemoMaterialModule {}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    RankingComponent,\n    RolesComponent,\n    TasksComponent,\n    AlertasComponent,\n    ProfileComponent,\n    LoginComponent,\n    LogoutComponent,\n    RankingTable,\n    RolesTable,\n    TasksTable,\n    AlertasTable,\n    ProfileTable\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatSlideToggleModule,\n    DemoMaterialModule,\n    HttpModule,\n    FormsModule,\n    AppRoutingModule,\n    SlideMenuModule\n  ],\n  providers: [\n    LocationService,\n    AuthChecker,\n    AlertasService,\n    AuditoriasService,\n    RolesService,\n    TasksService,\n    TasktypesService,\n    UsuariosService,\n    AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/app.module.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { RankingComponent } from './views/ranking/ranking.component';\r\nimport { RolesComponent } from './views/roles/roles.component';\r\nimport { TasksComponent } from './views/tasks/tasks.component';\r\nimport { AlertasComponent } from './views/alertas/alertas.component';\r\nimport { ProfileComponent } from './views/profile/profile.component';\r\nimport { LoginComponent } from './views/login/login.component';\r\nimport { AuthChecker } from './utils/auth-checker.component';\r\nimport { LogoutComponent } from './views/logout/logout.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'register', component: RankingComponent },\r\n    { path: 'ranking', component: RankingComponent, canActivate: [AuthChecker] },\r\n    { path: 'tasks', component: TasksComponent, canActivate: [AuthChecker] },\r\n    { path: 'roles', component: RolesComponent, canActivate: [AuthChecker] },\r\n    { path: 'profile', component: ProfileComponent, canActivate: [AuthChecker] },\r\n    { path: 'alerts', component: AlertasComponent, canActivate: [AuthChecker] },\r\n    { path: 'logout', component: LogoutComponent},\r\n    { path: '**', redirectTo: 'ranking' }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/app.routing.ts","module.exports = __webpack_public_path__ + \"background.100c6c7cc7db1f92c0bd.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/images/background.jpg\n// module id = ../../../../../src/app/images/background.jpg\n// module chunks = main","import { Auditoria } from './auditoria';\nimport { Usuarios } from './usuarios';\n\nexport class Alertas {\n  id: string;\n  usuario: Usuarios;\n  mensaje: string;\n  auditoria: Auditoria;\n  _links: Links;\n}\n\nexport class Links {\n\talertas: Href;\n}\n\nexport class Href {\n\thref: String;\n}\n\nexport class EmbeddedAlertas {\n\talertas: Alertas[];\n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/model/alertas.ts","import { TaskTypes } from './tasktypes';\nimport { Auditoria } from './auditoria';\n\nexport class Roles {\n  id: string;\n  nombre: string;\n  descripcion: string;\n  caracteristicas: string;\n  tiposTareas: TaskTypes[];\n  auditoria: Auditoria;\n  _links: Links;\n}\n\nexport class Links {\n\troles: Href;\n}\n\nexport class Href {\n\thref: String;\n}\n\nexport class EmbeddedRoles {\n\troles: Roles[];\n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/model/roles.ts","import { Auditoria } from './auditoria';\n\nexport class Tasks {\n  tipo: string;\n  descripcion: string;\n  puntos: Number;\n  reporter: string;\n  asignado: string;\n  estado: string;\n  auditoria: Auditoria;\n  _links: Links;\n}\n\nexport class Links {\n\ttasks: Href;\n}\n\nexport class Href {\n\thref: String;\n}\n\nexport class EmbeddedTasks {\n\ttasks: Tasks[];\n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/model/tasks.ts","import { Auditoria } from './auditoria';\n\nexport class TaskTypes {\n  id: string;\n  tipo: string;\n  descripcion: string;\n  points: Number;\n  auditoria: Auditoria;\n  _links: Links;\n}\n\nexport class Links {\n\ttaskTypes: Href;\n}\n\nexport class Href {\n\thref: String;\n}\n\nexport class EmbeddedTaskTypes {\n\ttasktypes: TaskTypes[];\n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/model/tasktypes.ts","import { Roles } from './roles';\nimport { Tasks } from './tasks';\nimport { Auditoria } from './auditoria';\nimport { Alertas } from './alertas';\n\nexport class Usuarios {\n  id: string;\n  nombre: string;\n  apellidos: string;\n  password: string;\n  rol: string;\n  tasks: Tasks[];\n  alertas: Alertas[];\n  auditoria: Auditoria;\n  _links: Links;\n}\n\nexport class Links {\n\tusuarios: Href;\n}\n\nexport class Href {\n\thref: String;\n}\n\nexport class EmbeddedUsuarios {\n\tusuarios: Usuarios[];\n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/model/usuarios.ts","module.exports = \"<div fxLayout=\\\"row\\\" class=\\\"footer\\\">\\r\\n    <div fxFlex=\\\"30%\\\" class=\\\"copyright\\\">\\r\\n        Thin2 Gamification Team APP 2018\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/sections/footer/footer.component.html\n// module id = ../../../../../src/app/sections/footer/footer.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'footer-component',\r\n    templateUrl: './footer.component.html'\r\n})\r\nexport class FooterComponent {\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/sections/footer/footer.component.ts","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutWrap class=\\\"header\\\">\\r\\n    <div class=\\\"sidenav-toggle\\\"\\t>\\r\\n        <button class=\\\"botonMenu\\\" type=\\\"button\\\" md-button (click)=\\\"menuTriggeredEvent(!menuStatus)\\\"><i class=\\\"material-icons\\\" style=\\\"color:white\\\">view_headline</i></button>\\r\\n    </div>\\r\\n    <div fxFlex style=\\\"padding: 1rem; margin-top:2px;\\\">\\r\\n        <span style=\\\"font-size:20px\\\">ePhoenix Monitoring</span>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/sections/header/header.component.html\n// module id = ../../../../../src/app/sections/header/header.component.html\n// module chunks = main","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n    providers: [],\r\n    selector: 'header-component',\r\n    templateUrl: './header.component.html'\r\n})\r\nexport class HeaderComponent {\r\n\r\n    @Output() menuTriggered: EventEmitter<boolean>;\r\n\r\n    menuStatus: boolean;\r\n    username: string;\r\n\r\n    constructor() {\r\n        this.menuTriggered = new EventEmitter<boolean>();\r\n        this.menuStatus = false;\r\n\r\n    }\r\n\r\n    menuTriggeredEvent(newMenuStatus: boolean) {\r\n        this.menuStatus = newMenuStatus;\r\n        this.menuTriggered.emit(newMenuStatus);\r\n        this.menuStatus = false;\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/sections/header/header.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Alertas,EmbeddedAlertas } from \"../model/alertas\";\nimport { Pagination } from '../model/pagination';\nimport { LocationService } from './location.service';\n \n@Injectable()\nexport class AlertasService {\n   public _embedded: EmbeddedAlertas;\n   public page: Pagination;\n   public error;\n   public code;\n   public message;\n   public status;\n   constructor(private http: Http,\n               private locationService: LocationService) {\n   }\n \n   getAlertas(): Observable<AlertasService> {\n      return this.http.get(this.locationService.location + \"alertas\")\n         .map((response: Response) => response.json())\n         .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n   }\n\n\n  postAlertas(alertas): Observable<AlertasService>{\n    const url = this.locationService.location + \"alertas\";\n\n    return this.http.post(url, alertas)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n  }\n\n  putAlertas(alertas): Observable<AlertasService>{\n    return this.http.put(alertas._links.alertas.href, alertas)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n  }\n\n  deleteAlertas(alertas): Observable<AlertasService>{\n     return this.http.delete(alertas._links.alertas.href)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/alertas.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Auditoria ,EmbeddedAuditoria } from \"../model/Auditoria\";\nimport { Pagination } from '../model/pagination';\nimport { LocationService } from './location.service';\n \n@Injectable()\nexport class AuditoriasService {\n   public _embedded: EmbeddedAuditoria;\n   public page: Pagination;\n   public error;\n   public code;\n   public message;\n   public status;\n   constructor(private http: Http,\n               private locationService: LocationService) {\n   }\n \n   getAuditorias(): Observable<AuditoriasService> {\n      return this.http.get(this.locationService.location + \"auditorias\")\n         .map((response: Response) => response.json())\n         .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n   }\n\n\n  postAuditorias(auditorias): Observable<AuditoriasService>{\n    const url = this.locationService.location + \"auditorias\";\n\n    return this.http.post(url, auditorias)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n  }\n\n  putAuditorias(auditorias): Observable<AuditoriasService>{\n    return this.http.put(auditorias._links.auditorias.href, auditorias)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n  }\n\n  deleteAuditorias(auditorias): Observable<AuditoriasService>{\n     return this.http.delete(auditorias._links.auditorias.href)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/auditoria.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Usuarios, EmbeddedUsuarios } from \"../model/usuarios\";\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UsuariosService } from '../services/usuarios.service';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n@Injectable()\nexport class AuthService {\n\n   private usuario: Usuarios;\n\n   constructor(private http: Http,\n               private usuariosService: UsuariosService,\n               private router: Router) {\n     \n     this.isCurrentUserFromLocalStorage();\n\n   }\n\n   isCurrentUserFromLocalStorage(): Boolean{\n       if (localStorage.getItem('currentUser')) {\n         \n         this.usuario = JSON.parse(localStorage.getItem('currentUser'));\n         console.log(\"isCurrentUserFromLocalStorage\" + this.usuario);\n\n         return true;\n\n       }\n\n       return false; \n\n    }\n \n   login(usuariosForm: Usuarios, errorMessage: string): string{\n\n    this.usuariosService.getUsuarioByNombre(usuariosForm).subscribe((response) =>{\n\n      if(response._embedded.usuarios == undefined || \n        response._embedded.usuarios.length == 0){\n\n        console.log(\"El usuario \" + usuariosForm.nombre + \" no existe.\");\n\n        return errorMessage = \"El usuario \" + usuariosForm.nombre + \" no existe.\";\n\n      }else{\n\n        let formPassword = this.passwordMd5(usuariosForm.password);\n        let databasePassword = response._embedded.usuarios[0].password;\n\n        console.log(formPassword + \"-\" + databasePassword);\n\n        if( formPassword === databasePassword ){\n\n          localStorage.setItem('currentUser', JSON.stringify(response._embedded.usuarios[0]));\n          this.usuario = response._embedded.usuarios[0];\n          \n          this.router.navigate(['ranking']);\n\n        }else{\n\n          console.log(\"Password incorrecto.\");\n          return errorMessage = \"Password incorrecto.\";\n\n        }\n      \n      }\n    });\n\n    return errorMessage;\n  }\n\n  passwordMd5(password: string): string {\n    return \"\" + Md5.hashStr(password);\n  }\n\n  getUsuario(): Usuarios{\n    return this.usuario;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Alertas,EmbeddedAlertas } from \"../model/alertas\";\nimport { Pagination } from '../model/pagination';\n \n@Injectable()\nexport class LocationService {\n   public location;\n   constructor(private http: Http) {\n \t\tif(window.location.hostname == \"localhost\"){\n \t\t\tthis.location = \"http://localhost:8080/\";\n   \t\t}else{\n   \t\t\tthis.location = \"https://gamification-team-app.herokuapp.com/\";\n   \t\t}\n   }\n \n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/location.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Roles,EmbeddedRoles } from \"../model/roles\";\nimport { Pagination } from '../model/pagination';\nimport { LocationService } from './location.service';\n \n@Injectable()\nexport class RolesService {\n   public _embedded: EmbeddedRoles;\n   public page: Pagination;\n   public error;\n   public code;\n   public message;\n   public status;\n   constructor(private http: Http,\n               private locationService: LocationService) {\n   }\n \n   getRoles(): Observable<RolesService> {\n      return this.http.get(this.locationService.location + \"roles\")\n         .map((response: Response) => response.json())\n         .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n   }\n\n\n  postRoles(roles): Observable<RolesService>{\n    const url = this.locationService.location + \"roles\";\n\n    return this.http.post(url, roles)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n  }\n\n  putRoles(roles): Observable<RolesService>{\n    return this.http.put(roles._links.roles.href, roles)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n  }\n\n  deleteRoles(roles): Observable<RolesService>{\n     return this.http.delete(roles._links.roles.href)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/roles.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Tasks,EmbeddedTasks } from \"../model/tasks\";\nimport { Pagination } from '../model/pagination';\nimport { LocationService } from './location.service';\n \n@Injectable()\nexport class TasksService {\n   public _embedded: EmbeddedTasks;\n   public page: Pagination;\n   public error;\n   public code;\n   public message;\n   public status;\n   constructor(private http: Http,\n               private locationService: LocationService) {\n   }\n \n   getTasks(): Observable<TasksService> {\n      return this.http.get(this.locationService.location + \"tasks\")\n         .map((response: Response) => response.json())\n         .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n   }\n\n\n  postTasks(tasks): Observable<TasksService>{\n    const url = this.locationService.location + \"tasks\";\n\n    return this.http.post(url, tasks)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n  }\n\n  putTasks(tasks): Observable<TasksService>{\n    return this.http.put(tasks._links.tasks.href, tasks)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n  }\n\n  deleteTasks(tasks): Observable<TasksService>{\n     return this.http.delete(tasks._links.tasks.href)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/tasks.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { TaskTypes,EmbeddedTaskTypes } from \"../model/tasktypes\";\nimport { Pagination } from '../model/pagination';\nimport { LocationService } from './location.service';\n \n@Injectable()\nexport class TasktypesService {\n   public _embedded: EmbeddedTaskTypes;\n   public page: Pagination;\n   public error;\n   public code;\n   public message;\n   public status;\n   constructor(private http: Http,\n               private locationService: LocationService) {\n   }\n \n   getTasktypes(): Observable<TasktypesService> {\n      return this.http.get(this.locationService.location + \"tasktypes\")\n         .map((response: Response) => response.json())\n         .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n   }\n\n\n  postTasktypes(tasktypes): Observable<TasktypesService>{\n    const url = this.locationService.location + \"tasktypes\";\n\n    return this.http.post(url, tasktypes)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n  }\n\n  putTasktypes(tasktypes): Observable<TasktypesService>{\n    return this.http.put(tasktypes._links.taskTypes, tasktypes)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n  }\n\n  deleteTasktypes(tasktypes): Observable<TasktypesService>{\n     return this.http.delete(tasktypes._links.taskTypes.href)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/tasktypes.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { Usuarios, EmbeddedUsuarios } from \"../model/usuarios\";\nimport { Pagination } from '../model/pagination';\nimport { LocationService } from './location.service';\n \n@Injectable()\nexport class UsuariosService {\n   public _embedded: EmbeddedUsuarios;\n   public page: Pagination;\n   public error;\n   public code;\n   public message;\n   public status;\n   constructor(private http: Http,\n               private locationService: LocationService) {\n   }\n \n   getUsuarios(): Observable<UsuariosService> {\n      return this.http.get(this.locationService.location + \"usuarios\")\n         .map((response: Response) => response.json())\n         .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n   }\n\n   getUsuarioByNombre(usuarios: Usuarios): Observable<UsuariosService> {\n      return this.http.get(this.locationService.location + \"usuarios/search/searchByNombre?nombre=\" + usuarios.nombre)\n         .map((response: Response) => response.json())\n         .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\n   }\n\n  postUsuarios(usuarios): Observable<UsuariosService>{\n    const url = this.locationService.location + \"usuarios\";\n\n    return this.http.post(url, usuarios)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n  }\n\n  putUsuarios(usuarios): Observable<UsuariosService>{\n    return this.http.put(usuarios._links.usuarios.href, usuarios)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n  }\n\n  deleteUsuarios(usuarios): Observable<UsuariosService>{\n     return this.http.delete(usuarios._links.usuarios.href)\n      .map((response: Response) => response.json())\n      .catch(this.error);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/services/usuarios.service.ts","import { Injectable } from '@angular/core';\nimport { Usuarios } from '../model/usuarios';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class AuthChecker implements CanActivate {\n\n    constructor(private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        \n        return true;\n/*\n        if (localStorage.getItem('currentUser')) {\n            return true;\n        }\n\n        this.router.navigate(['/login'], { queryParams: { }});\n\n        return false;\n*/\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/utils/auth-checker.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px;\\n}\\n\\n.example-full-width {\\n  width: 20%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/alertas/alertas-table.css\n// module id = ../../../../../src/app/views/alertas/alertas-table.css\n// module chunks = main","module.exports = \"<div class=\\\"example-container mat-elevation-z8\\\">\\n  <mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!-- id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <mat-header-cell style=\\\"min-width: 50px; max-width: 4%;\\\" *matHeaderCellDef style=\\\"max-width: 50px\\\"> ID </mat-header-cell>\\n      <mat-cell style=\\\"min-width: 50px; max-width: 4%;\\\" *matCellDef=\\\"let element\\\" style=\\\"max-width: 50px\\\"> 1 </mat-cell>\\n    </ng-container>\\n\\n    <!-- Usuario Column -->\\n    <ng-container matColumnDef=\\\"usuario\\\">\\n      <mat-header-cell *matHeaderCellDef> Usuario </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.usuario}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Mensaje Column -->\\n    <ng-container matColumnDef=\\\"mensaje\\\">\\n      <mat-header-cell *matHeaderCellDef> Mensaje </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.mensaje}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Fecha Column -->\\n    <ng-container matColumnDef=\\\"fecha\\\">\\n      <mat-header-cell *matHeaderCellDef> Fecha </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.fecha}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Action Column -->\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <mat-header-cell *matHeaderCellDef class=\\\"center_row\\\"> Action </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"center_row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"update(element)\\\">Modificar</button>\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"remove(element)\\\">Borrar</button>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/alertas/alertas-table.html\n// module id = ../../../../../src/app/views/alertas/alertas-table.html\n// module chunks = main","import { Component, Input, Output } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { Alertas } from '../../model/alertas';\nimport { AlertasService } from '../../services/alertas.service';\n\n@Component({\n  selector: 'alertas-table',\n  styleUrls: ['alertas-table.css'],\n  templateUrl: 'alertas-table.html',\n})\nexport class AlertasTable {\n  displayedColumns = ['id', 'usuario', 'mensaje', 'fecha', 'action'];\n\n  public dataSource = new MatTableDataSource<Alertas>();\n\n  public alertasForm: Alertas;\n\n  constructor(private alertasService: AlertasService){\n    this.alertasForm = new Alertas();\n    this.loadAlertas();\n  }\n\n  loadAlertas(){\n    this.alertasService.getAlertas().subscribe((response) => {\n      this.dataSource = new MatTableDataSource<Alertas>(response._embedded.alertas);\n    });\n  }\n\n  update(item: Alertas){\n    this.alertasForm = item;\n  }\n\n  remove(item: Alertas){\n    this.alertasService.deleteAlertas(item).subscribe((response) =>{\n      this.loadAlertas();\n    });\n  }\n\n  reiniciar(){\n    this.alertasForm = new Alertas();\n  }\n\n  enviar(){\n    if( this.alertasForm._links != undefined){\n      this.alertasService.putAlertas(this.alertasForm).subscribe((response) =>{\n        this.loadAlertas();\n      });\n    }else{\n      this.alertasService.postAlertas(this.alertasForm).subscribe((response) =>{\n        this.loadAlertas();\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/alertas/alertas-table.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".timeleft{\\n\\t\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/alertas/alertas.component.css\n// module id = ../../../../../src/app/views/alertas/alertas.component.css\n// module chunks = main","module.exports = \"<alertas-table></alertas-table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/alertas/alertas.component.html\n// module id = ../../../../../src/app/views/alertas/alertas.component.html\n// module chunks = main","import { AlertasTable } from './alertas-table';\nimport { AlertasService } from '../../services/alertas.service';\n\nimport { Component } from '@angular/core';\nimport Stomp from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport $ from 'jquery';\nimport { MatTableDataSource } from '@angular/material';\nimport { Alertas } from '../../model/alertas';\nimport { CdkTableModule } from '@angular/cdk/table';\n\n@Component({\n  selector: 'alertas',\n  templateUrl: './alertas.component.html',\n  styleUrls: ['./alertas.component.css']\n})\nexport class AlertasComponent {\n\n  public datasource = new MatTableDataSource<Alertas>();\n\n  constructor(private alertasService: AlertasService){\n  }\n\n  refreshTable(event):void{\n    this.alertasService.getAlertas().subscribe((response) => {\n      this.datasource = new MatTableDataSource<Alertas>(response._embedded.alertas);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/alertas/alertas.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px;\\n}\\n\\n.login-form {\\n  min-width: 150px;\\n  width: 100%;\\n  font-size: 20px;\\n}\\n\\n.login-full-width {\\n  width: 100%;\\n}\\n\\n.wrapper {\\n\\tpadding: 15px 20px 40px 50px;\\n\\tmargin: 203px 54px 10px 10px;\\n\\tfont-size: 24px;\\n\\tfont-weight: bold;\\n\\topacity: 0.8;\\n\\tcolor: #000;\\n\\twidth: 30%;\\n    min-width: 254px;\\n\\tfloat: right;\\n}\\n\\n.login-buttons{\\n\\tfloat: right;\\n}\\n\\n.mat-checkbox-label, \\n.mat-checkbox-layout .mat-checkbox-label {\\n\\tpadding-right: 23px;\\n}\\n\\n.error-message-div {\\n    background-color: rgba(255, 0, 0, 0.1);\\n    color: red;\\n    padding: 6px 6px 6px 11px;\\n    border: 1px solid;\\n    margin: -6px 10px 10px 10px;\\n    font-size: 15px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/login/login.component.css\n// module id = ../../../../../src/app/views/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"wrapper\\\">\\n\\t<form class=\\\"login-form\\\">\\n\\t\\t<div>\\n\\t\\t  <mat-form-field class=\\\"login-full-width\\\">\\n\\t\\t    <input required matInput name=\\\"nombre\\\" placeholder=\\\"Nombre\\\" [(ngModel)]=\\\"usuariosForm.nombre\\\">\\n\\t\\t  </mat-form-field>\\n\\t\\t</div>\\n\\t\\t<div>\\n\\t\\t  <mat-form-field *ngIf=\\\"newUserForm == true\\\" class=\\\"login-full-width\\\">\\n\\t\\t    <input required matInput name=\\\"apellidos\\\" placeholder=\\\"Apellidos\\\" [(ngModel)]=\\\"usuariosForm.apellidos\\\">\\n\\t\\t  </mat-form-field>\\n\\t\\t</div>\\n\\t\\t<div>\\n\\t\\t  <mat-form-field class=\\\"login-full-width\\\">\\n\\t\\t    <input required matInput type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"usuariosForm.password\\\">\\n\\t\\t  </mat-form-field>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"error-message-div\\\" *ngIf=\\\"this.errorMessage.length > 0\\\"> {{ errorMessage }} </div>\\n\\t\\t<div class=\\\"login-buttons\\\">\\n\\t\\t  <mat-checkbox [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"newUserForm\\\" [checked]=\\\"newUserForm\\\" (change)=\\\"registerForm($event)\\\">Crear usuario</mat-checkbox>\\n\\t\\t  <button mat-raised-button [disabled]=\\\"loginButtonDisabled()\\\" *ngIf=\\\"newUserForm == false\\\" #acceptButton color=\\\"primary\\\" (click)=\\\"login()\\\">Login</button>\\n\\t\\t  <button style=\\\"background-color: #54ff00de\\\" mat-raised-button [disabled]=\\\"registroButtonDisabled()\\\" *ngIf=\\\"newUserForm == true\\\" #acceptButton color=\\\"primary\\\" (click)=\\\"registro()\\\">Registro</button>\\n\\t\\t</div>\\n\\t</form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/login/login.component.html\n// module id = ../../../../../src/app/views/login/login.component.html\n// module chunks = main","import { UsuariosService } from '../../services/usuarios.service';\n\nimport { Component } from '@angular/core';\nimport Stomp from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport $ from 'jquery';\nimport { MatTableDataSource } from '@angular/material';\nimport { Usuarios } from '../../model/usuarios';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { ViewEncapsulation } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LoginComponent {\n\n  public usuariosForm = new Usuarios();\n\n  public newUserForm;\n\n  public errorMessage;\n\n  public datasource = new MatTableDataSource<Usuarios>();\n\n  constructor(private usuariosService: UsuariosService,\n              private authService: AuthService){\n    this.newUserForm = false;\n    this.errorMessage = \"\";\n    localStorage.removeItem('currentUser');\n  }\n\n  loginButtonDisabled() {\n    let disabled = false;\n    if (this.usuariosForm.nombre == undefined ||\n      this.usuariosForm.password == undefined){\n      disabled = true;\n    }else{\n      if (this.usuariosForm.nombre.length <= 3 ||\n        this.usuariosForm.password.length <= 3){\n        disabled = true;\n      }\n    }\n    return disabled;\n  }\n\n  registroButtonDisabled() {\n    let disabled = false;\n    if (this.usuariosForm.nombre == undefined ||\n      this.usuariosForm.password == undefined ||\n      this.usuariosForm.apellidos == undefined){\n      disabled = true;\n    }else{\n      if (this.usuariosForm.nombre.length <= 3 ||\n        this.usuariosForm.password.length <= 3 ||\n        this.usuariosForm.apellidos.length <= 3){\n        disabled = true;\n      }\n    }\n    return disabled;\n  }\n\n  login(){\n\n    this.errorMessage = this.authService.login(this.usuariosForm, this.errorMessage);\n\n  }\n\n  registro(){\n    this.usuariosService.getUsuarioByNombre(this.usuariosForm).subscribe((response) =>{\n\n      if(response._embedded.usuarios == undefined || \n        response._embedded.usuarios.length == 0){\n      \n        console.log(\"not found user \" + this.usuariosForm.nombre);\n        let nuevoUsuario = new Usuarios();\n        nuevoUsuario.nombre = this.usuariosForm.nombre;\n        nuevoUsuario.apellidos = this.usuariosForm.apellidos;\n        nuevoUsuario.password = this.authService.passwordMd5(this.usuariosForm.password);\n\n        console.log(nuevoUsuario.password + '----' + this.usuariosForm.password);\n\n        this.usuariosService.postUsuarios(nuevoUsuario).subscribe((response) =>{\n          this.login();\n        });\n\n\n      }else{\n        this.errorMessage = \"El usuario \" + this.usuariosForm.nombre + \" ya existe.\";\n      }\n\n    });\n\n  }\n\n  registerForm(event){\n    console.log(event.checked);\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/login/login.component.ts","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'logout',\n  template: '',\n})\nexport class LogoutComponent {\n  constructor(private router: Router){\n        localStorage.removeItem('currentUser');\n        this.router.navigate(['/login'], { queryParams: { }});\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/logout/logout.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px;\\n}\\n\\n.example-full-width {\\n  width: 20%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/profile/profile-table.css\n// module id = ../../../../../src/app/views/profile/profile-table.css\n// module chunks = main","module.exports = \"<form class=\\\"example-form\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input required matInput name=\\\"tipo\\\" placeholder=\\\"Tipo\\\" [(ngModel)]=\\\"tasksForm.tipo\\\">\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input required matInput type=\\\"number\\\" name=\\\"puntos\\\" placeholder=\\\"Puntos\\\" [(ngModel)]=\\\"tasksForm.puntos\\\">\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input required matInput name=\\\"descripcion\\\" placeholder=\\\"Descripcion\\\" [(ngModel)]=\\\"tasksForm.descripcion\\\">\\n  </mat-form-field>\\n  &nbsp;\\n  <button mat-raised-button [disabled]=\\\"acceptButtonDisabled()\\\" #acceptButton color=\\\"primary\\\" (click)=\\\"enviar()\\\">Enviar</button>\\n  <button mat-raised-button (click)=\\\"reiniciar()\\\">Reiniciar</button>\\n</form>\\n\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <mat-table #table [dataSource]=\\\"dataSource\\\">\\n  displayedColumns = ['id', 'tipo', 'descripcion', 'puntos', 'action'];\\n\\n    <!-- id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <mat-header-cell style=\\\"min-width: 50px; max-width: 4%;\\\" *matHeaderCellDef style=\\\"max-width: 50px\\\"> ID </mat-header-cell>\\n      <mat-cell style=\\\"min-width: 50px; max-width: 4%;\\\" *matCellDef=\\\"let element\\\" style=\\\"max-width: 50px\\\"> 1 </mat-cell>\\n    </ng-container>\\n\\n    <!-- Tipo Column -->\\n    <ng-container matColumnDef=\\\"tipo\\\">\\n      <mat-header-cell *matHeaderCellDef> Tipo </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.tipo}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Descripcion Column -->\\n    <ng-container matColumnDef=\\\"descripcion\\\">\\n      <mat-header-cell *matHeaderCellDef> Descripcion </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.descripcion}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Puntos Column -->\\n    <ng-container matColumnDef=\\\"puntos\\\">\\n      <mat-header-cell *matHeaderCellDef class=\\\"center_row\\\"> Puntos </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"center_row\\\"> {{element.puntos}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Action Column -->\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <mat-header-cell *matHeaderCellDef class=\\\"center_row\\\"> Action </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"center_row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"update(element)\\\">Modificar</button>\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"remove(element)\\\">Borrar</button>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/profile/profile-table.html\n// module id = ../../../../../src/app/views/profile/profile-table.html\n// module chunks = main","import { Component, Input, Output } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { TaskTypes } from '../../model/tasktypes';\nimport { TasktypesService } from '../../services/tasktypes.service';\n\n@Component({\n  selector: 'profile-table',\n  styleUrls: ['profile-table.css'],\n  templateUrl: 'profile-table.html',\n})\nexport class ProfileTable {\n  displayedColumns = ['id', 'tipo', 'descripcion', 'puntos', 'action'];\n\n  public dataSource = new MatTableDataSource<TaskTypes>();\n\n  public tasksForm: TaskTypes;\n\n  constructor(private tasktypesService: TasktypesService){\n    this.tasksForm = new TaskTypes();\n    this.loadTaskTypes();\n  }\n\n  loadTaskTypes(){\n    this.tasktypesService.getTasktypes().subscribe((response) => {\n      this.dataSource = new MatTableDataSource<TaskTypes>(response._embedded.tasktypes);\n    });\n  }\n\n  update(item: TaskTypes){\n    this.tasksForm = item;\n  }\n\n  remove(item: TaskTypes){\n    console.log(item);\n    this.tasktypesService.deleteTasktypes(item).subscribe((response) =>{\n      this.loadTaskTypes();\n    });\n  }\n\n  acceptButtonDisabled() {\n    let disabled = false;\n    if (this.tasksForm.tipo == undefined ||\n      this.tasksForm.descripcion == undefined){\n      disabled = true;\n    }else{\n      if (this.tasksForm.tipo.length <= 3 ||\n        this.tasksForm.descripcion.length <= 3){\n        disabled = true;\n      }\n    }\n    return disabled;\n  }\n\n  reiniciar(){\n    this.tasksForm = new TaskTypes();\n  }\n\n  enviar(){\n    if( this.tasksForm._links != undefined){\n      this.tasktypesService.putTasktypes(this.tasksForm).subscribe((response) =>{\n        this.loadTaskTypes();\n      });\n    }else{\n      this.tasktypesService.postTasktypes(this.tasksForm).subscribe((response) =>{\n        this.loadTaskTypes();\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/profile/profile-table.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-card {\\n  width: 400px;\\n  margin: 30px;\\n  background-color: rgba(0, 0, 0, 0.5);\\n  color: white;\\n}\\n\\n.mat-card-subtitle {\\n  color: white !important;\\n}\\n\\n.example-header-image {\\n  background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\n  background-size: cover;\\n}\\n\\n.demo-card-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-flow: column nowrap;\\n          flex-flow: column nowrap;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/profile/profile.component.css\n// module id = ../../../../../src/app/views/profile/profile.component.css\n// module chunks = main","module.exports = \"<div style=\\\"display: flex\\\">\\n\\t<mat-card class=\\\"example-card\\\" fxLayout=\\\"row\\\">\\n\\t  <mat-card-header>\\n\\t    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n\\t    <mat-card-title>Shiba Inu</mat-card-title>\\n\\t    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\\n\\t  </mat-card-header>\\n\\t  <!-- http://3.bp.blogspot.com/-vkHMT0LA91A/UGR3k_mv-lI/AAAAAAAABCw/k3gVPQqGIuc/s1600/cactuar.png -->\\n\\t  <img mat-card-image src=\\\"http://1.bp.blogspot.com/-99EH2exwEg8/VF9Md6_UTEI/AAAAAAAABUM/4UCrnaYvBVo/s1600/Wario.png\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n\\t  <mat-card-content>\\n\\t    <p>\\n\\t      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\\n\\t      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\\n\\t      bred for hunting.\\n\\t    </p>\\n\\t  </mat-card-content>\\n\\t  <mat-card-actions>\\n\\t    <button mat-button>LIKE</button>\\n\\t    <button mat-button>SHARE</button>\\n\\t  </mat-card-actions>\\n\\t</mat-card>\\n\\t<mat-card class=\\\"example-card\\\" fxLayout=\\\"row\\\">\\n\\t  <mat-card-header>\\n\\t    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n\\t    <mat-card-title>Shiba Inu</mat-card-title>\\n\\t    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\\n\\t  </mat-card-header>\\n\\t  <img mat-card-image src=\\\"https://alarcosjuegoderol.files.wordpress.com/2013/03/clerigo.png\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n\\t  <mat-card-content>\\n\\t    <p>\\n\\t      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\\n\\t      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\\n\\t      bred for hunting.\\n\\t    </p>\\n\\t  </mat-card-content>\\n\\t  <mat-card-actions>\\n\\t    <button mat-button>LIKE</button>\\n\\t    <button mat-button>SHARE</button>\\n\\t  </mat-card-actions>\\n\\t</mat-card>\\n\\t<mat-card class=\\\"example-card\\\" fxLayout=\\\"row\\\">\\n\\t  <mat-card-header>\\n\\t    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n\\t    <mat-card-title>Shiba Inu</mat-card-title>\\n\\t    <mat-card-subtitle>Dog Breed</mat-card-subtitle>\\n\\t  </mat-card-header>\\n\\t  <img mat-card-image src=\\\"https://www.websmultimedia.com/style/img/servicios/ilustracion-juegos.png\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n\\t  <mat-card-content>\\n\\t    <p>\\n\\t      The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\\n\\t      A small, agile dog that copes very well with mountainous terrain, the Shiba Inu was originally\\n\\t      bred for hunting.\\n\\t    </p>\\n\\t  </mat-card-content>\\n\\t  <mat-card-actions>\\n\\t    <button mat-button>LIKE</button>\\n\\t    <button mat-button>SHARE</button>\\n\\t  </mat-card-actions>\\n\\t</mat-card>\\n</div>\\n<profile-table></profile-table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/profile/profile.component.html\n// module id = ../../../../../src/app/views/profile/profile.component.html\n// module chunks = main","import { ProfileTable } from './profile-table';\nimport { TasktypesService } from '../../services/tasktypes.service';\n\nimport { Component } from '@angular/core';\nimport Stomp from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport $ from 'jquery';\nimport { MatTableDataSource } from '@angular/material';\nimport { TaskTypes } from '../../model/tasktypes';\nimport { CdkTableModule } from '@angular/cdk/table';\n\n@Component({\n  selector: 'profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent {\n\n  public datasource = new MatTableDataSource<TaskTypes>();\n\n  constructor(private tasktypesService: TasktypesService){\n  \n  }\n\n  refreshTable(event):void{\n    this.tasktypesService.getTasktypes().subscribe((response) => {\n      this.datasource = new MatTableDataSource<TaskTypes>(response._embedded.tasktypes);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/profile/profile.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ranking-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px;\\n}\\n\\n.ranking-form {\\n  min-width: 150px;\\n  width: 100%;\\n  font-size: 20px;\\n  text-align: center;\\n}\\n\\n.ranking-full-width {\\n  width: 20%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/ranking/ranking-table.css\n// module id = ../../../../../src/app/views/ranking/ranking-table.css\n// module chunks = main","module.exports = \"<form class=\\\"ranking-form\\\">\\n  <mat-form-field class=\\\"ranking-full-width\\\">\\n    <input required matInput name=\\\"nombre\\\" placeholder=\\\"Nombre\\\" [(ngModel)]=\\\"usuariosForm.nombre\\\">\\n  </mat-form-field>\\n  <mat-form-field class=\\\"ranking-full-width\\\">\\n    <input required matInput name=\\\"apellidos\\\" placeholder=\\\"Apellidos\\\" [(ngModel)]=\\\"usuariosForm.apellidos\\\">\\n  </mat-form-field>\\n  <mat-form-field style=\\\"width: 300px;\\\">\\n    <mat-select required name=\\\"rol\\\" placeholder=\\\"Rol\\\" [(ngModel)]=\\\"usuariosForm.rol\\\">\\n      <mat-option *ngFor=\\\"let rol of roles; let i = index\\\" value=\\\"{{ rol.nombre }}\\\">{{ rol.nombre }}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  &nbsp;\\n  <button mat-raised-button [disabled]=\\\"acceptButtonDisabled()\\\" #acceptButton color=\\\"primary\\\" (click)=\\\"enviarUsuario()\\\">Enviar</button>\\n  <button mat-raised-button (click)=\\\"reiniciarUsuario()\\\">Reiniciar</button>\\n</form>\\n\\n<div class=\\\"ranking-container mat-elevation-z8\\\">\\n  <mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!-- id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <mat-header-cell style=\\\"min-width: 50px; max-width: 4%;\\\" *matHeaderCellDef> ID </mat-header-cell>\\n      <mat-cell  style=\\\"min-width: 50px; max-width: 4%;\\\" *matCellDef=\\\"let element\\\"> 1 </mat-cell>\\n    </ng-container>\\n\\n    <!-- Nombre Column -->\\n    <ng-container matColumnDef=\\\"nombre\\\">\\n      <mat-header-cell *matHeaderCellDef> Nombre </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.nombre}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Apellidos Column -->\\n    <ng-container matColumnDef=\\\"apellidos\\\">\\n      <mat-header-cell *matHeaderCellDef> Apellidos </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.apellidos}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Rol Column -->\\n    <ng-container matColumnDef=\\\"rol\\\">\\n      <mat-header-cell *matHeaderCellDef> Rol </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.rol}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- puntos_actuales Column -->\\n    <ng-container matColumnDef=\\\"puntos_actuales\\\">\\n      <mat-header-cell *matHeaderCellDef class=\\\"center_row\\\"> Puntos Actuales </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"center_row\\\"> 0 </mat-cell>\\n    </ng-container>\\n\\n    <!-- puntos_acumulados Column -->\\n    <ng-container matColumnDef=\\\"puntos_acumulados\\\">\\n      <mat-header-cell *matHeaderCellDef class=\\\"center_row\\\"> Puntos Acumulados </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"center_row\\\"> 0 </mat-cell>\\n    </ng-container>\\n\\n    <!-- Action Column -->\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <mat-header-cell *matHeaderCellDef class=\\\"center_row\\\"> Action </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"center_row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateUsuario(element)\\\">Modificar</button>\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"removeUsuario(element)\\\">Borrar</button>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">{{row| json}}</mat-row>\\n  </mat-table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/ranking/ranking-table.html\n// module id = ../../../../../src/app/views/ranking/ranking-table.html\n// module chunks = main","import { Component, Input, Output } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { Usuarios } from '../../model/usuarios';\nimport { Roles } from '../../model/roles';\nimport { UsuariosService } from '../../services/usuarios.service';\nimport { AuthService } from '../../services/auth.service';\nimport { RolesService } from '../../services/roles.service';\nimport { ViewEncapsulation } from '@angular/core';\nimport { Md5 } from 'ts-md5/dist/md5';\n\n@Component({\n  selector: 'ranking-table',\n  styleUrls: ['ranking-table.css'],\n  templateUrl: 'ranking-table.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class RankingTable {\n  displayedColumns = ['id', 'nombre', 'apellidos', 'rol', 'puntos_actuales', 'puntos_acumulados', 'action'];\n\n  public dataSource = new MatTableDataSource<Usuarios>();\n\n  public usuariosForm: Usuarios;\n\n  public roles: Roles[];\n\n  constructor(private usuariosService: UsuariosService, \n              private rolesService: RolesService, \n              private authService: AuthService){\n    console.log(\"Usuario logado:\" + this.authService.getUsuario());\n    this.usuariosForm = new Usuarios();\n    this.usuariosForm.nombre = \"\";\n    this.loadUsuarios();\n  }\n\n  loadUsuarios(){\n    this.usuariosService.getUsuarios().subscribe((response) => {\n      this.dataSource = new MatTableDataSource<Usuarios>(response._embedded.usuarios);\n    });\n    this.rolesService.getRoles().subscribe((response) => {\n      this.roles = response._embedded.roles;\n    });\n  }\n\n  updateUsuario(item: Usuarios){\n    this.usuariosForm = item;\n  }\n\n  removeUsuario(item: Usuarios){\n    this.usuariosService.deleteUsuarios(item).subscribe((response) =>{\n      this.loadUsuarios();\n    });\n  }\n\n  acceptButtonDisabled() {\n    let disabled = false;\n    if (this.usuariosForm.nombre == undefined ||\n      this.usuariosForm.apellidos == undefined){\n      disabled = true;\n    }else{\n      if (this.usuariosForm.nombre.length <= 3 ||\n        this.usuariosForm.apellidos.length <= 3){\n        disabled = true;\n      }\n    }\n    return disabled;\n  }\n\n  reiniciarUsuario(){\n    this.usuariosForm = new Usuarios();\n  }\n\n  enviarUsuario(){\n\n    //var rol = this.roles.filter( rol => rol.nombre === this.usuariosForm.rol)[0];\n    if (this.usuariosForm.password == undefined){\n      \n      this.usuariosForm.password = this.authService.passwordMd5(\"everis00\");\n\n      console.log(\"Password:\" + this.usuariosForm.password);\n\n    }\n\n    if( this.usuariosForm._links != undefined){\n      this.usuariosService.putUsuarios(this.usuariosForm).subscribe((response) =>{\n        this.loadUsuarios();\n      });\n    }else{\n      this.usuariosService.postUsuarios(this.usuariosForm).subscribe((response) =>{\n        this.loadUsuarios();\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/ranking/ranking-table.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".timeleft{\\n\\ttext-align: right;\\n    padding-right: 2%;\\n    font-size: 30px;\\n    color: white;\\n    position: absolute;\\n    right: 0px;\\n    top: 10px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/ranking/ranking.component.css\n// module id = ../../../../../src/app/views/ranking/ranking.component.css\n// module chunks = main","module.exports = \"<div class=\\\"timeleft\\\"><b>Time Left:</b> {{time}}</div>\\n<ranking-table></ranking-table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/ranking/ranking.component.html\n// module id = ../../../../../src/app/views/ranking/ranking.component.html\n// module chunks = main","import { RankingTable } from './ranking-table';\nimport { UsuariosService } from '../../services/usuarios.service';\nimport { LocationService } from '../../services/location.service';\n\nimport { Component } from '@angular/core';\nimport Stomp from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport $ from 'jquery';\nimport { MatTableDataSource } from '@angular/material';\nimport { Usuarios } from '../../model/usuarios';\nimport { CdkTableModule } from '@angular/cdk/table';\n\n@Component({\n  selector: 'ranking',\n  templateUrl: './ranking.component.html',\n  styleUrls: ['./ranking.component.css']\n})\nexport class RankingComponent {\n  private serverUrl;\n  private time = \"Loading...\";\n  private stompClient;\n\n  public datasource = new MatTableDataSource<Usuarios>();\n\n  constructor(private usuariosService: UsuariosService,\n               private locationService: LocationService){\n    this.serverUrl = this.locationService.location + \"socket\";\n    this.initializeWebSocketConnection();\n  }\n\n  initializeWebSocketConnection(){\n    let ws = new SockJS(this.serverUrl);\n    this.stompClient = Stomp.over(ws);\n    let that = this;\n    this.stompClient.connect({}, function(frame) {\n      that.stompClient.debug = null;\n      that.stompClient.subscribe(\"/time\", (message) => {\n        if(message.body) {\n          that.time = message.body;\n        }\n      });\n    });\n  }\n\n  refreshTable(event):void{\n    this.usuariosService.getUsuarios().subscribe((response) => {\n      this.datasource = new MatTableDataSource<Usuarios>(response._embedded.usuarios);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/ranking/ranking.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px;\\n}\\n\\n.example-full-width {\\n  width: 20%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/roles/roles-table.css\n// module id = ../../../../../src/app/views/roles/roles-table.css\n// module chunks = main","module.exports = \"<form class=\\\"example-form\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input required matInput name=\\\"nombre\\\" placeholder=\\\"Nombre del Rol\\\" [(ngModel)]=\\\"rolesForm.nombre\\\">\\n  </mat-form-field>\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input required matInput name=\\\"descripcion\\\" placeholder=\\\"Descripcion del Rol\\\" [(ngModel)]=\\\"rolesForm.descripcion\\\">\\n  </mat-form-field>\\n  <mat-form-field style=\\\"width: 450px;\\\" class=\\\"example-full-width\\\">\\n    <input required matInput name=\\\"caracteristicas\\\" placeholder=\\\"Caracteristicas\\\" [(ngModel)]=\\\"rolesForm.caracteristicas\\\">\\n  </mat-form-field>\\n  &nbsp;\\n  <button mat-raised-button [disabled]=\\\"acceptButtonDisabled()\\\" #acceptButton color=\\\"primary\\\" (click)=\\\"enviarRol()\\\">Enviar</button>\\n  <button mat-raised-button (click)=\\\"reiniciarRol()\\\">Reiniciar</button>\\n</form>\\n\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!-- id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <mat-header-cell style=\\\"min-width: 50px; max-width: 4%;\\\" *matHeaderCellDef> ID </mat-header-cell>\\n      <mat-cell style=\\\"min-width: 50px; max-width: 4%;\\\" *matCellDef=\\\"let element\\\"> 1 </mat-cell>\\n    </ng-container>\\n\\n    <!-- Nombre Column -->\\n    <ng-container matColumnDef=\\\"nombre\\\">\\n      <mat-header-cell style=\\\"min-width: 200px; max-width: 15%;\\\" *matHeaderCellDef> Nombre </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\" style=\\\"min-width: 200px; max-width: 15%;\\\"> {{element.nombre}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Descripcion Column -->\\n    <ng-container matColumnDef=\\\"descripcion\\\">\\n      <mat-header-cell *matHeaderCellDef style=\\\"min-width: 250px; max-width: 27%;\\\"> Descripcion </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\" style=\\\"min-width: 250px; max-width: 27%;\\\"> {{element.descripcion}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Caracteristicas Column -->\\n    <ng-container matColumnDef=\\\"caracteristicas\\\">\\n      <mat-header-cell *matHeaderCellDef style=\\\"min-width: 250px; max-width: 27%;\\\"> Caracteristicas </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\" style=\\\"min-width: 250px; max-width: 27%;\\\"> {{element.caracteristicas}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Action Column -->\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <mat-header-cell *matHeaderCellDef class=\\\"center_row\\\"> Action </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"center_row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"updateRol(element)\\\">Modificar</button>\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"removeRol(element)\\\">Borrar</button>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/roles/roles-table.html\n// module id = ../../../../../src/app/views/roles/roles-table.html\n// module chunks = main","import { Component, Input, Output } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { Roles } from '../../model/roles';\nimport { RolesService } from '../../services/roles.service';\n\n@Component({\n  selector: 'roles-table',\n  styleUrls: ['roles-table.css'],\n  templateUrl: 'roles-table.html',\n})\nexport class RolesTable {\n  displayedColumns = ['id', 'nombre', 'descripcion', 'caracteristicas', 'action'];\n\n  public dataSource = new MatTableDataSource<Roles>();\n\n  public rolesForm: Roles;\n\n  constructor(private rolesService: RolesService){\n    this.rolesForm = new Roles();\n    this.loadRoles();\n  }\n\n  loadRoles(){\n    this.rolesService.getRoles().subscribe((response) => {\n      this.dataSource = new MatTableDataSource<Roles>(response._embedded.roles);\n    });\n  }\n\n  updateRol(item: Roles){\n    this.rolesForm = item;\n  }\n\n  removeRol(item: Roles){\n    this.rolesService.deleteRoles(item).subscribe((response) =>{\n      this.loadRoles();\n    });\n  }\n\n  acceptButtonDisabled() {\n    let disabled = false;\n    if (this.rolesForm.nombre == undefined ||\n      this.rolesForm.descripcion == undefined){\n      disabled = true;\n    }else{\n      if (this.rolesForm.nombre.length <= 3 ||\n        this.rolesForm.descripcion.length <= 3){\n        disabled = true;\n      }\n    }\n    return disabled;\n  }\n\n  reiniciarRol(){\n    this.rolesForm = new Roles();\n  }\n\n  enviarRol(){\n    if( this.rolesForm._links != undefined){\n      this.rolesService.putRoles(this.rolesForm).subscribe((response) =>{\n        this.loadRoles();\n      });\n    }else{\n      this.rolesService.postRoles(this.rolesForm).subscribe((response) =>{\n        this.loadRoles();\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/roles/roles-table.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".timeleft{\\n\\t\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/roles/roles.component.css\n// module id = ../../../../../src/app/views/roles/roles.component.css\n// module chunks = main","module.exports = \"<roles-table></roles-table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/roles/roles.component.html\n// module id = ../../../../../src/app/views/roles/roles.component.html\n// module chunks = main","import { RolesTable } from './roles-table';\nimport { RolesService } from '../../services/roles.service';\n\nimport { Component } from '@angular/core';\nimport Stomp from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport $ from 'jquery';\nimport { MatTableDataSource } from '@angular/material';\nimport { Roles } from '../../model/roles';\nimport { CdkTableModule } from '@angular/cdk/table';\n\n@Component({\n  selector: 'roles',\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent {\n\n  public datasource = new MatTableDataSource<Roles>();\n\n  constructor(private rolesService: RolesService){\n  }\n\n  refreshTable(event):void{\n    this.rolesService.getRoles().subscribe((response) => {\n      this.datasource = new MatTableDataSource<Roles>(response._embedded.roles);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/roles/roles.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  max-height: 500px;\\n  min-width: 300px;\\n}\\n\\n.mat-table {\\n  overflow: auto;\\n  max-height: 500px;\\n}\\n\\n.example-form {\\n  min-width: 150px;\\n  width: 100%;\\n  font-size: 20px;\\n}\\n\\n.example-full-width {\\n  width: 20%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/tasks/tasks-table.css\n// module id = ../../../../../src/app/views/tasks/tasks-table.css\n// module chunks = main","module.exports = \"<form class=\\\"example-form\\\">\\n  <mat-form-field style=\\\"width: 250px;\\\">\\n    <mat-select required name=\\\"asignado\\\" placeholder=\\\"Asignado\\\" [(ngModel)]=\\\"tasksForm.asignado\\\">\\n      <mat-option *ngFor=\\\"let usuario of usuarios; let i = index\\\" value=\\\"{{ usuario.nombre }}\\\">{{ usuario.nombre + ' ' + usuario.apellidos }}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field style=\\\"width: 250px;\\\">\\n    <mat-select required name=\\\"tipo\\\" placeholder=\\\"Tipo\\\" [(ngModel)]=\\\"tasksForm.tipo\\\">\\n      <mat-option *ngFor=\\\"let tipo of tasktypes; let i = index\\\" value=\\\"{{ tipo.tipo }}\\\">{{ tipo.tipo }}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field style=\\\"width: 100px;\\\" class=\\\"example-full-width\\\">\\n    <input required matInput type=\\\"number\\\" name=\\\"puntos\\\" placeholder=\\\"Puntos\\\" [(ngModel)]=\\\"tasksForm.puntos\\\">\\n  </mat-form-field>\\n  <mat-form-field style=\\\"width: 450px;\\\" class=\\\"example-full-width\\\">\\n    <input required matInput name=\\\"descripcion\\\" placeholder=\\\"Descripcion\\\" [(ngModel)]=\\\"tasksForm.descripcion\\\">\\n  </mat-form-field>\\n  &nbsp;\\n  <button mat-raised-button [disabled]=\\\"acceptButtonDisabled()\\\" #acceptButton color=\\\"primary\\\" (click)=\\\"enviar()\\\">Enviar</button>\\n  <button mat-raised-button (click)=\\\"reiniciar()\\\">Reiniciar</button>\\n</form>\\n\\n<div class=\\\"example-container mat-elevation-z8\\\">\\n  <mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n    <!-- id Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <mat-header-cell style=\\\"min-width: 50px; max-width: 4%;\\\" *matHeaderCellDef> ID </mat-header-cell>\\n      <mat-cell style=\\\"min-width: 50px; max-width: 4%;\\\" *matCellDef=\\\"let element\\\"> 1 </mat-cell>\\n    </ng-container>\\n\\n    <!-- Tipo Column -->\\n    <ng-container matColumnDef=\\\"tipo\\\">\\n      <mat-header-cell *matHeaderCellDef> Tipo </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.tipo}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Descripcion Column -->\\n    <ng-container matColumnDef=\\\"descripcion\\\">\\n      <mat-header-cell *matHeaderCellDef> Descripcion </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.descripcion}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Puntos Column -->\\n    <ng-container matColumnDef=\\\"puntos\\\">\\n      <mat-header-cell *matHeaderCellDef> Puntos </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.puntos}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Reporter Column -->\\n    <ng-container matColumnDef=\\\"reporter\\\">\\n      <mat-header-cell *matHeaderCellDef> Reporter </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.reporter}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Asignado Column -->\\n    <ng-container matColumnDef=\\\"asignado\\\">\\n      <mat-header-cell *matHeaderCellDef> Asignado </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.asignado}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Estado Column -->\\n    <ng-container matColumnDef=\\\"estado\\\">\\n      <mat-header-cell *matHeaderCellDef> Estado </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\"> {{element.estado}} </mat-cell>\\n    </ng-container>\\n\\n    <!-- Action Column -->\\n    <ng-container matColumnDef=\\\"action\\\">\\n      <mat-header-cell *matHeaderCellDef class=\\\"center_row\\\"> Action </mat-header-cell>\\n      <mat-cell *matCellDef=\\\"let element\\\" class=\\\"center_row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"update(element)\\\">Modificar</button>\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"remove(element)\\\">Borrar</button>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n  </mat-table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/tasks/tasks-table.html\n// module id = ../../../../../src/app/views/tasks/tasks-table.html\n// module chunks = main","import { Component, Input, Output } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { Tasks } from '../../model/tasks';\nimport { TaskTypes } from '../../model/tasktypes';\nimport { Usuarios } from '../../model/usuarios';\nimport { TasksService } from '../../services/tasks.service';\nimport { TasktypesService } from '../../services/tasktypes.service';\nimport { UsuariosService } from '../../services/usuarios.service';\n\n@Component({\n  selector: 'tasks-table',\n  styleUrls: ['tasks-table.css'],\n  templateUrl: 'tasks-table.html',\n})\nexport class TasksTable {\n  displayedColumns = ['id', 'tipo', 'descripcion', 'puntos', 'reporter', 'asignado', 'estado', 'action'];\n\n  public dataSource = new MatTableDataSource<Tasks>();\n\n  public tasksForm: Tasks;\n  public usuarios: Usuarios[];\n  public tasktypes: TaskTypes[];\n\n  constructor(private usuariosService: UsuariosService,\n              private tasksService: TasksService,\n              private tasktypesService: TasktypesService){\n    this.tasksForm = new Tasks();\n    this.loadTasks();\n    this.loadUsuarios();\n    this.loadTaskTypes();\n  }\n\n  loadTasks(){\n    this.tasksService.getTasks().subscribe((response) => {\n      this.dataSource = new MatTableDataSource<Tasks>(response._embedded.tasks);\n    });\n  }\n\n  loadUsuarios(){\n    this.usuariosService.getUsuarios().subscribe((response) => {\n      this.usuarios = response._embedded.usuarios;\n    });\n  }\n\n  loadTaskTypes(){\n    this.tasktypesService.getTasktypes().subscribe((response) => {\n      this.tasktypes = response._embedded.tasktypes;\n    });\n  }\n\n  update(item: Tasks){\n    this.tasksForm = item;\n  }\n\n  remove(item: Tasks){\n    this.tasksService.deleteTasks(item).subscribe((response) =>{\n      this.loadTasks();\n    });\n  }\n\n  acceptButtonDisabled() {\n    let disabled = false;\n    if (this.tasksForm.tipo == undefined ||\n      this.tasksForm.descripcion == undefined){\n      disabled = true;\n    }else{\n      if (this.tasksForm.tipo.length <= 3 ||\n        this.tasksForm.descripcion.length <= 3){\n        disabled = true;\n      }\n    }\n    return disabled;\n  }\n\n  reiniciar(){\n    this.tasksForm = new Tasks();\n  }\n\n  enviar(){\n    if( this.tasksForm._links != undefined){\n      this.tasksService.putTasks(this.tasksForm).subscribe((response) =>{\n        this.loadTasks();\n      });\n    }else{\n      this.tasksService.postTasks(this.tasksForm).subscribe((response) =>{\n        this.loadTasks();\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/tasks/tasks-table.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".timeleft{\\n\\t\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/tasks/tasks.component.css\n// module id = ../../../../../src/app/views/tasks/tasks.component.css\n// module chunks = main","module.exports = \"<tasks-table></tasks-table>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/tasks/tasks.component.html\n// module id = ../../../../../src/app/views/tasks/tasks.component.html\n// module chunks = main","import { TasksTable } from './tasks-table';\nimport { TasksService } from '../../services/tasks.service';\n\nimport { Component } from '@angular/core';\nimport Stomp from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport $ from 'jquery';\nimport { MatTableDataSource } from '@angular/material';\nimport { Tasks } from '../../model/tasks';\nimport { CdkTableModule } from '@angular/cdk/table';\n\n@Component({\n  selector: 'tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent {\n\n  public datasource = new MatTableDataSource<Tasks>();\n\n  constructor(private tasksService: TasksService){\n  }\n\n  refreshTable(event):void{\n    this.tasksService.getTasks().subscribe((response) => {\n      this.datasource = new MatTableDataSource<Tasks>(response._embedded.tasks);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/app/views/tasks/tasks.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Volumes/MACINTOSH_HD/GitHub/gamification-team-app/src/main/angular5/src/main.ts"],"sourceRoot":"webpack:///"}